{"version":3,"sources":["../src/handler-types.ts"],"sourcesContent":["export enum HandlerType {\n  OnRpcRequest = 'onRpcRequest',\n  OnSignature = 'onSignature',\n  OnTransaction = 'onTransaction',\n  OnCronjob = 'onCronjob',\n  OnInstall = 'onInstall',\n  OnUpdate = 'onUpdate',\n  OnNameLookup = 'onNameLookup',\n  OnKeyringRequest = 'onKeyringRequest',\n  OnHomePage = 'onHomePage',\n  OnUserInput = 'onUserInput',\n}\n\nexport type SnapHandler = {\n  /**\n   * The type of handler.\n   */\n  type: HandlerType;\n\n  /**\n   * Whether the handler is required, i.e., whether the request will fail if the\n   * handler is called, but the snap does not export it.\n   *\n   * This is primarily used for the lifecycle handlers, which are optional.\n   */\n  required: boolean;\n\n  /**\n   * Validate the given snap export. This should return a type guard for the\n   * handler type.\n   *\n   * @param snapExport - The export to validate.\n   * @returns Whether the export is valid.\n   */\n  validator: (snapExport: unknown) => boolean;\n};\n\nexport const SNAP_EXPORT_NAMES = Object.values(HandlerType);\n"],"mappings":";AAAO,IAAK,cAAL,kBAAKA,iBAAL;AACL,EAAAA,aAAA,kBAAe;AACf,EAAAA,aAAA,iBAAc;AACd,EAAAA,aAAA,mBAAgB;AAChB,EAAAA,aAAA,eAAY;AACZ,EAAAA,aAAA,eAAY;AACZ,EAAAA,aAAA,cAAW;AACX,EAAAA,aAAA,kBAAe;AACf,EAAAA,aAAA,sBAAmB;AACnB,EAAAA,aAAA,gBAAa;AACb,EAAAA,aAAA,iBAAc;AAVJ,SAAAA;AAAA,GAAA;AAqCL,IAAM,oBAAoB,OAAO,OAAO,WAAW;","names":["HandlerType"]}