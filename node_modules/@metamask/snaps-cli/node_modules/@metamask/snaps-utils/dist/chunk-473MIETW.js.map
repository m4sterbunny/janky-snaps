{"version":3,"sources":["../src/bytes.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,qBAAqB;AAUvB,SAAS,SAAS,OAAsD;AAG7E,QAAM,YAAY,iBAAiB,cAAc,MAAM,QAAQ;AAE/D,MAAI,OAAO,cAAc,UAAU;AACjC,WAAO,cAAc,SAAS;AAAA,EAChC;AAEA,SAAO;AACT","sourcesContent":["import { stringToBytes } from '@metamask/utils';\n\nimport { VirtualFile } from './virtual-file/VirtualFile';\n\n/**\n * Convert a bytes-like input value to a Uint8Array.\n *\n * @param bytes - A bytes-like value.\n * @returns The input value converted to a Uint8Array if necessary.\n */\nexport function getBytes(bytes: VirtualFile | Uint8Array | string): Uint8Array {\n  // Unwrap VirtualFiles to extract the content\n  // The content is then either a string or Uint8Array\n  const unwrapped = bytes instanceof VirtualFile ? bytes.value : bytes;\n\n  if (typeof unwrapped === 'string') {\n    return stringToBytes(unwrapped);\n  }\n\n  return unwrapped;\n}\n"]}