{"version":3,"sources":["../src/utils/cli.ts"],"sourcesContent":["import path from 'path';\n\nexport const CONFIG_FILE = 'snap.config.js';\nexport const TS_CONFIG_FILE = 'snap.config.ts';\n\n// CLI arguments whose values are file paths.\nconst pathArguments = new Set([\n  'src',\n  's',\n  'dist',\n  'd',\n  'bundle',\n  'b',\n  'root',\n  'r',\n]);\n\n/**\n * Sanitizes inputs. Currently normalizes \"./\" paths to \".\".\n * Yargs handles other path normalization as specified in builders.\n *\n * @param argv - Arguments as an object generated by yargs.\n */\nexport function sanitizeInputs(argv: Record<string, unknown>) {\n  Object.keys(argv).forEach((key) => {\n    if (typeof argv[key] === 'string') {\n      // Node's path.normalize() does not do this\n      if (argv[key] === './') {\n        argv[key] = '.';\n      }\n\n      if (pathArguments.has(key)) {\n        argv[key] = path.normalize(argv[key] as string);\n      }\n    }\n  });\n}\n\n/**\n * Trims leading and trailing periods \".\" and forward slashes \"/\" from the\n * given path string.\n *\n * @param pathString - The path string to trim.\n * @returns The trimmed path string.\n */\nexport function trimPathString(pathString: string): string {\n  return pathString.replace(/^[./]+|[./]+$/gu, '');\n}\n"],"mappings":";AAAA,OAAO,UAAU;AAEV,IAAM,cAAc;AACpB,IAAM,iBAAiB;AAG9B,IAAM,gBAAgB,oBAAI,IAAI;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAQM,SAAS,eAAe,MAA+B;AAC5D,SAAO,KAAK,IAAI,EAAE,QAAQ,CAAC,QAAQ;AACjC,QAAI,OAAO,KAAK,GAAG,MAAM,UAAU;AAEjC,UAAI,KAAK,GAAG,MAAM,MAAM;AACtB,aAAK,GAAG,IAAI;AAAA,MACd;AAEA,UAAI,cAAc,IAAI,GAAG,GAAG;AAC1B,aAAK,GAAG,IAAI,KAAK,UAAU,KAAK,GAAG,CAAW;AAAA,MAChD;AAAA,IACF;AAAA,EACF,CAAC;AACH;AASO,SAAS,eAAe,YAA4B;AACzD,SAAO,WAAW,QAAQ,mBAAmB,EAAE;AACjD;","names":[]}