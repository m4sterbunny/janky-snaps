{"version":3,"sources":["../src/commands/watch/watch.ts"],"sourcesContent":["import { isFile } from '@metamask/snaps-utils/node';\n\nimport type { ProcessedConfig, ProcessedWebpackConfig } from '../../config';\nimport { CommandError } from '../../errors';\nimport type { Steps } from '../../utils';\nimport { executeSteps, info } from '../../utils';\nimport { getServer } from '../../webpack';\nimport { watch } from './implementation';\n\ntype WatchOptions = {\n  /**\n   * The port to listen on.\n   */\n  port?: number;\n};\n\ntype WatchContext = {\n  config: ProcessedWebpackConfig;\n  options: WatchOptions;\n};\n\nconst steps: Steps<WatchContext> = [\n  {\n    name: 'Checking the input file.',\n    task: async ({ config }) => {\n      const { input } = config;\n\n      if (!(await isFile(input))) {\n        throw new CommandError(\n          `Input file not found: \"${input}\". Make sure that the \"input\" field in your snap config is correct.`,\n        );\n      }\n    },\n  },\n  {\n    name: 'Starting the development server.',\n    condition: ({ config }) => config.server.enabled,\n    task: async ({ config, options, spinner }) => {\n      const server = getServer(config);\n      const { port } = await server.listen(options.port ?? config.server.port);\n\n      info(`The server is listening on http://localhost:${port}.`, spinner);\n    },\n  },\n  {\n    name: 'Building the snap bundle.',\n    task: async ({ config, spinner }) => {\n      await watch(config, { spinner });\n    },\n  },\n];\n\n/**\n * Watch a directory and its subdirectories for changes, and build when files\n * are added or changed.\n *\n * Ignores 'node_modules' and dotfiles.\n * Creates destination directory if it doesn't exist.\n *\n * @param config - The config object.\n * @param options - The options object.\n */\nexport async function watchHandler(\n  config: ProcessedConfig,\n  options: WatchOptions,\n): Promise<void> {\n  await executeSteps(steps, { config, options });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAAS,cAAc;AAqBvB,IAAM,QAA6B;AAAA,EACjC;AAAA,IACE,MAAM;AAAA,IACN,MAAM,OAAO,EAAE,OAAO,MAAM;AAC1B,YAAM,EAAE,MAAM,IAAI;AAElB,UAAI,CAAE,MAAM,OAAO,KAAK,GAAI;AAC1B,cAAM,IAAI;AAAA,UACR,0BAA0B,KAAK;AAAA,QACjC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW,CAAC,EAAE,OAAO,MAAM,OAAO,OAAO;AAAA,IACzC,MAAM,OAAO,EAAE,QAAQ,SAAS,QAAQ,MAAM;AAC5C,YAAM,SAAS,UAAU,MAAM;AAC/B,YAAM,EAAE,KAAK,IAAI,MAAM,OAAO,OAAO,QAAQ,QAAQ,OAAO,OAAO,IAAI;AAEvE,WAAK,+CAA+C,IAAI,KAAK,OAAO;AAAA,IACtE;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM,OAAO,EAAE,QAAQ,QAAQ,MAAM;AACnC,YAAM,MAAM,QAAQ,EAAE,QAAQ,CAAC;AAAA,IACjC;AAAA,EACF;AACF;AAYA,eAAsB,aACpB,QACA,SACe;AACf,QAAM,aAAa,OAAO,EAAE,QAAQ,QAAQ,CAAC;AAC/C;","names":[]}