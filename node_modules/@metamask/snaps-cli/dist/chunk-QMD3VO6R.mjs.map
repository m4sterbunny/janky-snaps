{"version":3,"sources":["../src/utils/legacy.ts"],"sourcesContent":["import { TranspilationModes } from '../builders';\nimport type { LegacyOptions } from '../config';\n\n/**\n * Get the dependencies to transpile, as well as the regular input file.\n *\n * If `transpilationMode` is not set to `localAndDeps`, this will return an\n * empty array.\n *\n * @param config - The config object.\n * @returns An array with regular expressions of dependencies that should be\n * transpiled.\n */\nexport function processDependencies(config: LegacyOptions) {\n  const { depsToTranspile, transpilationMode } = config;\n  if (transpilationMode === TranspilationModes.LocalAndDeps) {\n    const regex = getDependencyRegExp(depsToTranspile);\n    if (regex !== null) {\n      return [regex];\n    }\n  }\n\n  return [];\n}\n\n/**\n * Processes a string of space delimited dependencies into one RegExp string.\n *\n * @param dependencies - An array of dependencies to add to the RegExp.\n * @returns A RegExp object.\n */\nexport function getDependencyRegExp(dependencies: string[]): RegExp | null {\n  if (!dependencies || dependencies.includes('.') || !dependencies.length) {\n    return null;\n  }\n\n  const paths: string[] = sanitizeDependencyPaths(dependencies);\n  return RegExp(`/node_modules/(?!${paths.join('|')})`, 'u');\n}\n\n/**\n * Helper function to remove any leading and trailing slashes from dependency\n * list.\n *\n * @param dependencies - An array of dependencies to sanitize.\n * @returns An array of sanitized paths.\n */\nexport function sanitizeDependencyPaths(dependencies: string[]): string[] {\n  return dependencies.map((dependency) => {\n    return dependency.replace(/^[/\\\\]+/u, '').replace(/[/\\\\]+$/u, '');\n  });\n}\n"],"mappings":";AAaO,SAAS,oBAAoB,QAAuB;AACzD,QAAM,EAAE,iBAAiB,kBAAkB,IAAI;AAC/C,MAAI,yDAAuD;AACzD,UAAM,QAAQ,oBAAoB,eAAe;AACjD,QAAI,UAAU,MAAM;AAClB,aAAO,CAAC,KAAK;AAAA,IACf;AAAA,EACF;AAEA,SAAO,CAAC;AACV;AAQO,SAAS,oBAAoB,cAAuC;AACzE,MAAI,CAAC,gBAAgB,aAAa,SAAS,GAAG,KAAK,CAAC,aAAa,QAAQ;AACvE,WAAO;AAAA,EACT;AAEA,QAAM,QAAkB,wBAAwB,YAAY;AAC5D,SAAO,OAAO,oBAAoB,MAAM,KAAK,GAAG,CAAC,KAAK,GAAG;AAC3D;AASO,SAAS,wBAAwB,cAAkC;AACxE,SAAO,aAAa,IAAI,CAAC,eAAe;AACtC,WAAO,WAAW,QAAQ,YAAY,EAAE,EAAE,QAAQ,YAAY,EAAE;AAAA,EAClE,CAAC;AACH;","names":[]}