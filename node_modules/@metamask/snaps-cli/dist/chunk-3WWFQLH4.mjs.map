{"version":3,"sources":["../src/commands/eval/implementation.ts"],"sourcesContent":["import { evalBundle, SnapEvalError, indent } from '@metamask/snaps-utils/node';\nimport { red } from 'chalk';\n\nimport { CommandError } from '../../errors';\n\n/**\n * Evaluate the given bundle in the SES environment. This is a wrapper around\n * {@link evalBundle} that throws a {@link CommandError} if the bundle cannot be\n * evaluated.\n *\n * @param path - The path to the bundle.\n * @throws If the bundle cannot be evaluated.\n */\nexport async function evaluate(path: string) {\n  try {\n    return await evalBundle(path);\n  } catch (evalError) {\n    if (evalError instanceof SnapEvalError) {\n      throw new CommandError(\n        `Failed to evaluate snap bundle in SES. This is likely due to an incompatibility with the SES environment in your snap.\\nReceived the following error from the SES environment:\\n\\n${indent(\n          red(evalError.output.stderr),\n          2,\n        )}`,\n      );\n    }\n\n    // If the error is not a `SnapEvalError`, we don't know what it is, so\n    // we just throw it.\n    throw evalError;\n  }\n}\n"],"mappings":";;;;;AAAA,SAAS,YAAY,eAAe,cAAc;AAClD,SAAS,WAAW;AAYpB,eAAsB,SAAS,MAAc;AAC3C,MAAI;AACF,WAAO,MAAM,WAAW,IAAI;AAAA,EAC9B,SAAS,WAAW;AAClB,QAAI,qBAAqB,eAAe;AACtC,YAAM,IAAI;AAAA,QACR;AAAA;AAAA;AAAA,EAAqL;AAAA,UACnL,IAAI,UAAU,OAAO,MAAM;AAAA,UAC3B;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAIA,UAAM;AAAA,EACR;AACF;","names":[]}