{"version":3,"sources":["../src/errors.ts"],"sourcesContent":["import { bold, red } from 'chalk';\n\n/**\n * An error that is thrown when the CLI fails. This is the base error for all\n * CLI errors. It is not thrown directly, but is instead extended by other\n * errors.\n *\n * This error is assumed to have all the information needed to display a\n * readable error message, so it does not include the stack trace when it is\n * thrown.\n */\nexport class CLIError extends Error {}\n\n/**\n * An error that is thrown when a command fails.\n *\n * It wraps the error prefix in a bold red \"Error\" string.\n */\nexport class CommandError extends CLIError {\n  constructor(message: string, name = 'Error') {\n    super(message);\n    this.name = bold(red(name));\n  }\n}\n\n/**\n * An error that is thrown when the config file cannot be loaded.\n */\nexport class ConfigError extends CommandError {\n  constructor(message: string) {\n    super(message, 'Config Error');\n  }\n}\n"],"mappings":";AAAA,SAAS,MAAM,WAAW;AAWnB,IAAM,WAAN,cAAuB,MAAM;AAAC;AAO9B,IAAM,eAAN,cAA2B,SAAS;AAAA,EACzC,YAAY,SAAiB,OAAO,SAAS;AAC3C,UAAM,OAAO;AACb,SAAK,OAAO,KAAK,IAAI,IAAI,CAAC;AAAA,EAC5B;AACF;AAKO,IAAM,cAAN,cAA0B,aAAa;AAAA,EAC5C,YAAY,SAAiB;AAC3B,UAAM,SAAS,cAAc;AAAA,EAC/B;AACF;","names":[]}