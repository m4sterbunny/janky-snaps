{"version":3,"sources":["../src/commands/watch/implementation.ts"],"sourcesContent":["import { basename } from 'path';\nimport type { Watching } from 'webpack';\n\nimport type { ProcessedWebpackConfig } from '../../config';\nimport type { WebpackOptions } from '../../webpack';\nimport { getCompiler } from '../../webpack';\n\n/**\n * Build the snap bundle and watch for changes. This uses Webpack to build the\n * bundle.\n *\n * @param config - The config object.\n * @param options - The Webpack options.\n * @returns A promise that resolves when the bundle is built for the first time.\n * The promise resolves with a Webpack watching instance that can be used to\n * close the watcher.\n */\nexport async function watch(\n  config: ProcessedWebpackConfig,\n  options?: WebpackOptions,\n) {\n  const compiler = await getCompiler(config, {\n    evaluate: config.evaluate,\n    watch: true,\n    spinner: options?.spinner,\n  });\n\n  return new Promise<Watching>((resolve, reject) => {\n    compiler.watch(\n      {\n        ignored: [\n          '**/node_modules/**/*',\n          `**/${basename(config.output.path)}/**/*`,\n        ],\n      },\n      (watchError) => {\n        if (watchError) {\n          reject(watchError);\n          return;\n        }\n\n        resolve(compiler.watching);\n      },\n    );\n  });\n}\n"],"mappings":";;;;;AAAA,SAAS,gBAAgB;AAiBzB,eAAsB,MACpB,QACA,SACA;AACA,QAAM,WAAW,MAAM,YAAY,QAAQ;AAAA,IACzC,UAAU,OAAO;AAAA,IACjB,OAAO;AAAA,IACP,SAAS,SAAS;AAAA,EACpB,CAAC;AAED,SAAO,IAAI,QAAkB,CAAC,SAAS,WAAW;AAChD,aAAS;AAAA,MACP;AAAA,QACE,SAAS;AAAA,UACP;AAAA,UACA,MAAM,SAAS,OAAO,OAAO,IAAI,CAAC;AAAA,QACpC;AAAA,MACF;AAAA,MACA,CAAC,eAAe;AACd,YAAI,YAAY;AACd,iBAAO,UAAU;AACjB;AAAA,QACF;AAEA,gBAAQ,SAAS,QAAQ;AAAA,MAC3B;AAAA,IACF;AAAA,EACF,CAAC;AACH;","names":[]}