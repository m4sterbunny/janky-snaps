import { Formatter } from './changelog';
import { Version } from './constants';
import { PackageRename } from './shared-types';
export declare type UpdateChangelogOptions = {
    changelogContent: string;
    currentVersion?: Version;
    repoUrl: string;
    isReleaseCandidate: boolean;
    projectRootDirectory?: string;
    tagPrefixes?: [string, ...string[]];
    formatter?: Formatter;
    /**
     * The package rename properties, used in case of package is renamed
     */
    packageRename?: PackageRename;
};
/**
 * Update a changelog with any commits made since the last release. Commits for
 * PRs that are already included in the changelog are omitted.
 *
 * @param options - Update options.
 * @param options.changelogContent - The current changelog.
 * @param options.currentVersion - The current version. Required if
 * `isReleaseCandidate` is set, but optional otherwise.
 * @param options.repoUrl - The GitHub repository URL for the current project.
 * @param options.isReleaseCandidate - Denotes whether the current project.
 * is in the midst of release preparation or not. If this is set, any new
 * changes are listed under the current release header. Otherwise, they are
 * listed under the 'Unreleased' section.
 * @param options.projectRootDirectory - The root project directory, used to
 * filter results from various git commands. This path is assumed to be either
 * absolute, or relative to the current directory. Defaults to the root of the
 * current git repository.
 * @param options.tagPrefixes - A list of tag prefixes to look for, where the first is the intended
 * prefix and each subsequent prefix is a fallback in case the previous tag prefixes are not found.
 * @param options.formatter - A custom Markdown formatter to use.
 * @param options.packageRename - The package rename properties.
 * An optional, which is required only in case of package renamed.
 * @returns The updated changelog text.
 */
export declare function updateChangelog({ changelogContent, currentVersion, repoUrl, isReleaseCandidate, projectRootDirectory, tagPrefixes, formatter, packageRename, }: UpdateChangelogOptions): Promise<string | undefined>;
