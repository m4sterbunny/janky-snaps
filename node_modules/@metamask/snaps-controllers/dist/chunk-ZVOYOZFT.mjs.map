{"version":3,"sources":["../src/services/ProxyPostMessageStream.ts"],"sourcesContent":["import { BasePostMessageStream } from '@metamask/post-message-stream';\nimport type { JsonRpcRequest } from '@metamask/utils';\n\nexport type ProxyPostMessageStreamArgs = {\n  stream: BasePostMessageStream;\n  jobId: string;\n  extra?: Record<string, unknown>;\n};\n\nexport type ProxyPostMessage = {\n  jobId: string;\n  data: JsonRpcRequest;\n  extra?: Record<string, unknown>;\n};\n\n/**\n * A post message stream that wraps messages in a job ID, before sending them\n * over the underlying stream.\n */\nexport class ProxyPostMessageStream extends BasePostMessageStream {\n  readonly #stream: BasePostMessageStream;\n\n  readonly #jobId: string;\n\n  /**\n   * Initializes a new `ProxyPostMessageStream` instance.\n   *\n   * @param args - The constructor arguments.\n   * @param args.stream - The underlying stream to use for communication.\n   * @param args.jobId - The ID of the job this stream is associated with.\n   */\n  constructor({ stream, jobId }: ProxyPostMessageStreamArgs) {\n    super();\n\n    this.#stream = stream;\n    this.#jobId = jobId;\n\n    this.#stream.on('data', this.#onData.bind(this));\n  }\n\n  /**\n   * Handle incoming data from the underlying stream. This checks that the job\n   * ID matches the expected job ID, and pushes the data to the stream if so.\n   *\n   * @param data - The data to handle.\n   */\n  #onData(data: ProxyPostMessage) {\n    if (data.jobId !== this.#jobId) {\n      return;\n    }\n\n    this.push(data.data);\n  }\n\n  /**\n   * Write data to the underlying stream. This wraps the data in an object with\n   * the job ID.\n   *\n   * @param data - The data to write.\n   */\n  _postMessage(data: ProxyPostMessage) {\n    this.#stream.write({\n      jobId: this.#jobId,\n      data,\n    });\n  }\n}\n"],"mappings":";;;;;;;;AAAA,SAAS,6BAA6B;AAAtC;AAmBO,IAAM,yBAAN,cAAqC,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYhE,YAAY,EAAE,QAAQ,MAAM,GAA+B;AACzD,UAAM;AAcR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BA,uBAAS,SAAT;AAEA,uBAAS,QAAT;AAYE,uBAAK,SAAU;AACf,uBAAK,QAAS;AAEd,uBAAK,SAAQ,GAAG,QAAQ,sBAAK,oBAAQ,KAAK,IAAI,CAAC;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBA,aAAa,MAAwB;AACnC,uBAAK,SAAQ,MAAM;AAAA,MACjB,OAAO,mBAAK;AAAA,MACZ;AAAA,IACF,CAAC;AAAA,EACH;AACF;AA9CW;AAEA;AAwBT;AAAA,YAAO,SAAC,MAAwB;AAC9B,MAAI,KAAK,UAAU,mBAAK,SAAQ;AAC9B;AAAA,EACF;AAEA,OAAK,KAAK,KAAK,IAAI;AACrB;","names":[]}