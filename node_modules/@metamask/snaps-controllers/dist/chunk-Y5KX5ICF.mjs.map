{"version":3,"sources":["../src/services/node-js/NodeThreadExecutionService.ts"],"sourcesContent":["import type { BasePostMessageStream } from '@metamask/post-message-stream';\nimport { ThreadParentMessageStream } from '@metamask/post-message-stream';\n// eslint-disable-next-line @typescript-eslint/no-shadow\nimport { Worker } from 'worker_threads';\n\nimport type { Job } from '..';\nimport { AbstractExecutionService } from '..';\n\nexport class NodeThreadExecutionService extends AbstractExecutionService<Worker> {\n  protected async initEnvStream(): Promise<{\n    worker: Worker;\n    stream: BasePostMessageStream;\n  }> {\n    const worker = new Worker(\n      require.resolve(\n        '@metamask/snaps-execution-environments/dist/browserify/node-thread/bundle.js',\n      ),\n      {\n        stdout: true,\n        stderr: true,\n      },\n    );\n\n    // Capturing `stdout` and `stderr` from the worker prevents the worker from\n    // writing to them directly, making it easier to capture them Jest.\n    worker.stdout.on('data', (data) => {\n      // eslint-disable-next-line no-console\n      console.log(data.toString());\n    });\n\n    worker.stderr.on('data', (data) => {\n      // eslint-disable-next-line no-console\n      console.error(data.toString());\n    });\n\n    const stream = new ThreadParentMessageStream({ thread: worker });\n    return Promise.resolve({ worker, stream });\n  }\n\n  protected async terminateJob(jobWrapper: Job<Worker>): Promise<void> {\n    await jobWrapper.worker.terminate();\n  }\n}\n"],"mappings":";;;;;;;;AACA,SAAS,iCAAiC;AAE1C,SAAS,cAAc;AAKhB,IAAM,6BAAN,cAAyC,yBAAiC;AAAA,EAC/E,MAAgB,gBAGb;AACD,UAAM,SAAS,IAAI;AAAA,MACjB,UAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA;AAAA,QACE,QAAQ;AAAA,QACR,QAAQ;AAAA,MACV;AAAA,IACF;AAIA,WAAO,OAAO,GAAG,QAAQ,CAAC,SAAS;AAEjC,cAAQ,IAAI,KAAK,SAAS,CAAC;AAAA,IAC7B,CAAC;AAED,WAAO,OAAO,GAAG,QAAQ,CAAC,SAAS;AAEjC,cAAQ,MAAM,KAAK,SAAS,CAAC;AAAA,IAC/B,CAAC;AAED,UAAM,SAAS,IAAI,0BAA0B,EAAE,QAAQ,OAAO,CAAC;AAC/D,WAAO,QAAQ,QAAQ,EAAE,QAAQ,OAAO,CAAC;AAAA,EAC3C;AAAA,EAEA,MAAgB,aAAa,YAAwC;AACnE,UAAM,WAAW,OAAO,UAAU;AAAA,EACpC;AACF;","names":[]}