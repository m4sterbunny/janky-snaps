{"version":3,"sources":["../src/snaps/location/local.ts"],"sourcesContent":["import type { SnapManifest, VirtualFile } from '@metamask/snaps-utils';\nimport { LocalSnapIdStruct, SnapIdPrefixes } from '@metamask/snaps-utils';\nimport { assert, assertStruct } from '@metamask/utils';\n\nimport type { HttpOptions } from './http';\nimport { HttpLocation } from './http';\nimport type { SnapLocation } from './location';\n\nexport class LocalLocation implements SnapLocation {\n  readonly #http: HttpLocation;\n\n  constructor(url: URL, opts: HttpOptions = {}) {\n    assertStruct(url.toString(), LocalSnapIdStruct, 'Invalid Snap Id');\n    // TODO(ritave): Write deepMerge() which merges fetchOptions.\n    assert(\n      opts.fetchOptions === undefined,\n      'Currently adding fetch options to local: is unsupported.',\n    );\n\n    this.#http = new HttpLocation(\n      new URL(url.toString().slice(SnapIdPrefixes.local.length)),\n      { ...opts, fetchOptions: { cache: 'no-cache' } },\n    );\n  }\n\n  async manifest(): Promise<VirtualFile<SnapManifest>> {\n    const vfile = await this.#http.manifest();\n\n    return convertCanonical(vfile);\n  }\n\n  async fetch(path: string): Promise<VirtualFile> {\n    return convertCanonical(await this.#http.fetch(path));\n  }\n\n  get shouldAlwaysReload() {\n    return true;\n  }\n}\n\n/**\n * Converts vfiles with canonical `http:` paths into `local:` paths.\n *\n * @param vfile - The {@link VirtualFile} to convert.\n * @returns The same object with updated `.data.canonicalPath`.\n */\nfunction convertCanonical<Result>(\n  vfile: VirtualFile<Result>,\n): VirtualFile<Result> {\n  assert(vfile.data.canonicalPath !== undefined);\n  vfile.data.canonicalPath = `local:${vfile.data.canonicalPath}`;\n  return vfile;\n}\n"],"mappings":";;;;;;;;;;AACA,SAAS,mBAAmB,sBAAsB;AAClD,SAAS,QAAQ,oBAAoB;AAFrC;AAQO,IAAM,gBAAN,MAA4C;AAAA,EAGjD,YAAY,KAAU,OAAoB,CAAC,GAAG;AAF9C,uBAAS,OAAT;AAGE,iBAAa,IAAI,SAAS,GAAG,mBAAmB,iBAAiB;AAEjE;AAAA,MACE,KAAK,iBAAiB;AAAA,MACtB;AAAA,IACF;AAEA,uBAAK,OAAQ,IAAI;AAAA,MACf,IAAI,IAAI,IAAI,SAAS,EAAE,MAAM,eAAe,MAAM,MAAM,CAAC;AAAA,MACzD,EAAE,GAAG,MAAM,cAAc,EAAE,OAAO,WAAW,EAAE;AAAA,IACjD;AAAA,EACF;AAAA,EAEA,MAAM,WAA+C;AACnD,UAAM,QAAQ,MAAM,mBAAK,OAAM,SAAS;AAExC,WAAO,iBAAiB,KAAK;AAAA,EAC/B;AAAA,EAEA,MAAM,MAAM,MAAoC;AAC9C,WAAO,iBAAiB,MAAM,mBAAK,OAAM,MAAM,IAAI,CAAC;AAAA,EACtD;AAAA,EAEA,IAAI,qBAAqB;AACvB,WAAO;AAAA,EACT;AACF;AA7BW;AAqCX,SAAS,iBACP,OACqB;AACrB,SAAO,MAAM,KAAK,kBAAkB,MAAS;AAC7C,QAAM,KAAK,gBAAgB,SAAS,MAAM,KAAK,aAAa;AAC5D,SAAO;AACT;","names":[]}