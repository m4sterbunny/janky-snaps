{"version":3,"sources":["../src/validation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAYA,eAAsB,oBACpB,OACe;AACf,uBAAqB,MAAM,SAAS,MAAM;AAC1C,QAAM,mBAAmB,KAAK;AAC9B;AAAA,IACE,MAAM,SAAS;AAAA,IACf,MAAM,kBAAkB,IAAI,CAAC,SAAS,KAAK,MAAM;AAAA,EACnD;AAEA,MAAI,MAAM,SAAS;AACjB,qBAAiB,MAAM,OAAO;AAAA,EAChC;AACF","sourcesContent":["import { assertIsSnapIcon } from './icon';\nimport { validateSnapManifestLocalizations } from './localization';\nimport { assertIsSnapManifest } from './manifest/validation';\nimport { validateSnapShasum } from './snaps';\nimport type { FetchedSnapFiles } from './types';\n\n/**\n * Validates the files contained in a fetched snap.\n *\n * @param files - All potentially included files in a fetched snap.\n * @throws If any of the files are considered invalid.\n */\nexport async function validateFetchedSnap(\n  files: FetchedSnapFiles,\n): Promise<void> {\n  assertIsSnapManifest(files.manifest.result);\n  await validateSnapShasum(files);\n  validateSnapManifestLocalizations(\n    files.manifest.result,\n    files.localizationFiles.map((file) => file.result),\n  );\n\n  if (files.svgIcon) {\n    assertIsSnapIcon(files.svgIcon);\n  }\n}\n"]}