{"version":3,"sources":["../src/internals/simulation/files.ts"],"sourcesContent":["import { AuxiliaryFileEncoding } from '@metamask/snaps-sdk';\nimport type { VirtualFile } from '@metamask/snaps-utils';\nimport { encodeAuxiliaryFile, normalizeRelative } from '@metamask/snaps-utils';\n\n/**\n * Get a statically defined Snap file from an array of files.\n *\n * @param files - The Snap files.\n * @param path - The file path.\n * @param encoding - The requested file encoding.\n * @returns The file in the requested encoding if found, otherwise null.\n */\nexport async function getSnapFile(\n  files: VirtualFile[],\n  path: string,\n  encoding: AuxiliaryFileEncoding = AuxiliaryFileEncoding.Base64,\n) {\n  const normalizedPath = normalizeRelative(path);\n  const base64 = files\n    .find((file) => file.path === normalizedPath)\n    ?.toString('base64');\n\n  if (!base64) {\n    return null;\n  }\n\n  return await encodeAuxiliaryFile(base64, encoding);\n}\n"],"mappings":";AAAA,SAAS,6BAA6B;AAEtC,SAAS,qBAAqB,yBAAyB;AAUvD,eAAsB,YACpB,OACA,MACA,WAAkC,sBAAsB,QACxD;AACA,QAAM,iBAAiB,kBAAkB,IAAI;AAC7C,QAAM,SAAS,MACZ,KAAK,CAAC,SAAS,KAAK,SAAS,cAAc,GAC1C,SAAS,QAAQ;AAErB,MAAI,CAAC,QAAQ;AACX,WAAO;AAAA,EACT;AAEA,SAAO,MAAM,oBAAoB,QAAQ,QAAQ;AACnD;","names":[]}