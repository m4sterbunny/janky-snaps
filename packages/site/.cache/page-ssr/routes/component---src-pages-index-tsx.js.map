{"version":3,"file":"component---src-pages-index-tsx.js","mappings":"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","sources":["webpack://site/./src/pages/index.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport {\n  ConnectButton,\n  InstallFlaskButton,\n  ReconnectButton,\n  SendHelloButton,\n  Card,\n} from '../components';\nimport { defaultSnapOrigin } from '../config';\nimport {\n  useMetaMask,\n  useInvokeSnap,\n  useMetaMaskContext,\n  useRequestSnap,\n} from '../hooks';\nimport { isLocalSnap, shouldDisplayReconnectButton } from '../utils';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  margin-top: 7.6rem;\n  margin-bottom: 7.6rem;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding-left: 2.4rem;\n    padding-right: 2.4rem;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    width: auto;\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-top: 0;\n  margin-bottom: 2.4rem;\n  text-align: center;\n`;\n\nconst Span = styled.span`\n  color: ${(props) => props.theme.colors.primary?.default};\n`;\n\nconst Subtitle = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  font-weight: 500;\n  margin-top: 0;\n  margin-bottom: 0;\n  ${({ theme }) => theme.mediaQueries.small} {\n    font-size: ${({ theme }) => theme.fontSizes.text};\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  max-width: 64.8rem;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.5rem;\n`;\n\nconst Notice = styled.div`\n  background-color: ${({ theme }) => theme.colors.background?.alternative};\n  border: 1px solid ${({ theme }) => theme.colors.border?.default};\n  color: ${({ theme }) => theme.colors.text?.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n\n  & > * {\n    margin: 0;\n  }\n  ${({ theme }) => theme.mediaQueries.small} {\n    margin-top: 1.2rem;\n    padding: 1.6rem;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: ${({ theme }) => theme.colors.error?.muted};\n  border: 1px solid ${({ theme }) => theme.colors.error?.default};\n  color: ${({ theme }) => theme.colors.error?.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-bottom: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding: 1.6rem;\n    margin-bottom: 1.2rem;\n    margin-top: 1.2rem;\n    max-width: 100%;\n  }\n`;\n\nconst Index = () => {\n  const { error } = useMetaMaskContext();\n  const { isFlask, snapsDetected, installedSnap } = useMetaMask();\n  const requestSnap = useRequestSnap();\n  const invokeSnap = useInvokeSnap();\n\n  const isMetaMaskReady = isLocalSnap(defaultSnapOrigin)\n    ? isFlask\n    : snapsDetected;\n\n  const handleSendHelloClick = async () => {\n    await invokeSnap({ method: 'hello' });\n  };\n\n  return (\n    <Container>\n      <Heading>\n        Welcome to <Span>template-snap</Span>\n      </Heading>\n      <Subtitle>\n        Get started by editing <code>src/index.ts</code>\n      </Subtitle>\n      <CardContainer>\n        {error && (\n          <ErrorMessage>\n            <b>An error happened:</b> {error.message}\n          </ErrorMessage>\n        )}\n        {!isMetaMaskReady && (\n          <Card\n            content={{\n              title: 'Install',\n              description:\n                'Snaps is pre-release software only available in MetaMask Flask, a canary distribution for developers with access to upcoming features.',\n              button: <InstallFlaskButton />,\n            }}\n            fullWidth\n          />\n        )}\n        {!installedSnap && (\n          <Card\n            content={{\n              title: 'Connect',\n              description:\n                'Get started by connecting to and installing the example snap.',\n              button: (\n                <ConnectButton\n                  onClick={requestSnap}\n                  disabled={!isMetaMaskReady}\n                />\n              ),\n            }}\n            disabled={!isMetaMaskReady}\n          />\n        )}\n        {shouldDisplayReconnectButton(installedSnap) && (\n          <Card\n            content={{\n              title: 'Reconnect',\n              description:\n                'While connected to a local running snap this button will always be displayed in order to update the snap if a change is made.',\n              button: (\n                <ReconnectButton\n                  onClick={requestSnap}\n                  disabled={!installedSnap}\n                />\n              ),\n            }}\n            disabled={!installedSnap}\n          />\n        )}\n        <Card\n          content={{\n            title: 'Send Hello message',\n            description:\n              'Display a custom message within a confirmation screen in MetaMask.',\n            button: (\n              <SendHelloButton\n                onClick={handleSendHelloClick}\n                disabled={!installedSnap}\n              />\n            ),\n          }}\n          disabled={!installedSnap}\n          fullWidth={\n            isMetaMaskReady &&\n            Boolean(installedSnap) &&\n            !shouldDisplayReconnectButton(installedSnap)\n          }\n        />\n        <Notice>\n          <p>\n            Please note that the <b>snap.manifest.json</b> and{' '}\n            <b>package.json</b> must be located in the server root directory and\n            the bundle must be hosted at the location specified by the location\n            field.\n          </p>\n        </Notice>\n      </CardContainer>\n    </Container>\n  );\n};\n\nexport default Index;\n"],"names":["styled","ConnectButton","InstallFlaskButton","ReconnectButton","SendHelloButton","Card","defaultSnapOrigin","useMetaMask","useInvokeSnap","useMetaMaskContext","useRequestSnap","isLocalSnap","shouldDisplayReconnectButton","jsx","_jsx","jsxs","_jsxs","Container","div","withConfig","displayName","theme","mediaQueries","small","Heading","h1","Span","span","props","_props$theme$colors$p","colors","primary","default","Subtitle","p","fontSizes","large","text","CardContainer","Notice","_theme$colors$backgro","background","alternative","_theme$colors$border","border","_theme$colors$text","radii","ErrorMessage","_theme$colors$error","error","muted","_theme$colors$error2","_theme$colors$error3","Index","isFlask","snapsDetected","installedSnap","requestSnap","invokeSnap","isMetaMaskReady","handleSendHelloClick","method","children","message","content","title","description","button","fullWidth","onClick","disabled","Boolean"],"sourceRoot":""}